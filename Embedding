{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Embedding","version":"0.3.2","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"metadata":{"id":"xPfAJB24cZH0","colab_type":"text"},"cell_type":"markdown","source":["https://realpython.com/python-keras-text-classification/"]},{"metadata":{"id":"zOtXZm27H_Tr","colab_type":"code","colab":{}},"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","from nltk.tokenize import wordpunct_tokenize\n","import emoji\n"],"execution_count":0,"outputs":[]},{"metadata":{"id":"57VGKwjCXsXN","colab_type":"code","outputId":"f134db23-900b-4057-d42d-215a25e6ab94","executionInfo":{"status":"ok","timestamp":1556348864880,"user_tz":-180,"elapsed":3482,"user":{"displayName":"Valerie Shelgunova","photoUrl":"https://lh5.googleusercontent.com/-i2CX_QSsamo/AAAAAAAAAAI/AAAAAAAAAB8/YRSVdMujpXw/s64/photo.jpg","userId":"14712883095412086889"}},"colab":{"base_uri":"https://localhost:8080/","height":35}},"cell_type":"code","source":["!pip install emoji"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Requirement already satisfied: emoji in /usr/local/lib/python3.6/dist-packages (0.5.2)\n"],"name":"stdout"}]},{"metadata":{"id":"9v-YR9VoIJ1k","colab_type":"code","colab":{}},"cell_type":"code","source":["import matplotlib.pyplot as plt\n","from IPython.display import clear_output"],"execution_count":0,"outputs":[]},{"metadata":{"id":"HANSSb5aJzDS","colab_type":"code","colab":{}},"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","from sklearn.metrics import classification_report\n","from sklearn.utils import class_weight\n"],"execution_count":0,"outputs":[]},{"metadata":{"id":"g-b4pxglIJyQ","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":35},"outputId":"55aa4407-ac54-49c1-9f18-99800967cba2","executionInfo":{"status":"ok","timestamp":1556358019705,"user_tz":-180,"elapsed":1500,"user":{"displayName":"Valerie Shelgunova","photoUrl":"https://lh5.googleusercontent.com/-i2CX_QSsamo/AAAAAAAAAAI/AAAAAAAAAB8/YRSVdMujpXw/s64/photo.jpg","userId":"14712883095412086889"}}},"cell_type":"code","source":["import keras\n","from keras.models import Sequential\n","from keras import layers\n","import tensorflow as tf\n","from keras.layers import Dense,Activation,Layer,Lambda\n","from keras.preprocessing.text import Tokenizer\n","from keras.preprocessing.sequence import pad_sequences\n"],"execution_count":4,"outputs":[{"output_type":"stream","text":["Using TensorFlow backend.\n"],"name":"stderr"}]},{"metadata":{"id":"0RK3rmshIJvc","colab_type":"code","outputId":"adb133b4-be18-4538-8c39-11734e05df9f","executionInfo":{"status":"ok","timestamp":1556358024736,"user_tz":-180,"elapsed":1083,"user":{"displayName":"Valerie Shelgunova","photoUrl":"https://lh5.googleusercontent.com/-i2CX_QSsamo/AAAAAAAAAAI/AAAAAAAAAB8/YRSVdMujpXw/s64/photo.jpg","userId":"14712883095412086889"}},"colab":{"base_uri":"https://localhost:8080/","height":282}},"cell_type":"code","source":["df_features = pd.read_csv('gk4z_features.csv')\n","df_features.head(2)"],"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>text</th>\n","      <th>likes</th>\n","      <th>label</th>\n","      <th>len_char</th>\n","      <th>punct</th>\n","      <th>punct_count</th>\n","      <th>punct%</th>\n","      <th>tokens</th>\n","      <th>tokens_count</th>\n","      <th>tokens%</th>\n","      <th>smiles</th>\n","      <th>smiles_count</th>\n","      <th>smiles%</th>\n","      <th>numbers_count</th>\n","      <th>numbers%</th>\n","      <th>latin_count</th>\n","      <th>latin%</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>76000</td>\n","      <td>#конкурс@the4gkz \\r\\r\\r\\nДля вашего удобства с...</td>\n","      <td>17</td>\n","      <td>post</td>\n","      <td>503</td>\n","      <td>#@.:•|-.—:./:./•|-.—/:./:://./|://./•|.—:./:.,!</td>\n","      <td>47</td>\n","      <td>0.093439</td>\n","      <td>['#', 'конкурс', '@', 'the4gkz', 'Для', 'вашег...</td>\n","      <td>81</td>\n","      <td>0.161034</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>23</td>\n","      <td>0.045726</td>\n","      <td>116</td>\n","      <td>0.230616</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>76914</td>\n","      <td>Уже сегодня ночью (по МСК) начнётся один из са...</td>\n","      <td>34</td>\n","      <td>post</td>\n","      <td>669</td>\n","      <td>()—.—()!..,!(),—(,).:://..//</td>\n","      <td>28</td>\n","      <td>0.041854</td>\n","      <td>['Уже', 'сегодня', 'ночью', '(', 'по', 'МСК', ...</td>\n","      <td>111</td>\n","      <td>0.165919</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","      <td>49</td>\n","      <td>0.073244</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["      id                                               text  likes label  \\\n","0  76000  #конкурс@the4gkz \\r\\r\\r\\nДля вашего удобства с...     17  post   \n","1  76914  Уже сегодня ночью (по МСК) начнётся один из са...     34  post   \n","\n","   len_char                                            punct  punct_count  \\\n","0       503  #@.:•|-.—:./:./•|-.—/:./:://./|://./•|.—:./:.,!           47   \n","1       669                     ()—.—()!..,!(),—(,).:://..//           28   \n","\n","     punct%                                             tokens  tokens_count  \\\n","0  0.093439  ['#', 'конкурс', '@', 'the4gkz', 'Для', 'вашег...            81   \n","1  0.041854  ['Уже', 'сегодня', 'ночью', '(', 'по', 'МСК', ...           111   \n","\n","    tokens% smiles  smiles_count  smiles%  numbers_count  numbers%  \\\n","0  0.161034    NaN             0      0.0             23  0.045726   \n","1  0.165919    NaN             0      0.0              0  0.000000   \n","\n","   latin_count    latin%  \n","0          116  0.230616  \n","1           49  0.073244  "]},"metadata":{"tags":[]},"execution_count":5}]},{"metadata":{"id":"3TE_2UC7IJsk","colab_type":"code","colab":{}},"cell_type":"code","source":["def mapping(data,feature):\n","    featureMap=dict()\n","    count=0\n","    for i in sorted(data[feature].unique(),reverse=True):\n","        featureMap[i]=count\n","        count=count+1\n","    data[feature]=data[feature].map(featureMap)\n","    return data"],"execution_count":0,"outputs":[]},{"metadata":{"id":"R9NMh59fIJpq","colab_type":"code","colab":{}},"cell_type":"code","source":["df_features=mapping(df_features,feature=\"label\")"],"execution_count":0,"outputs":[]},{"metadata":{"id":"sKZNBrYGQAgL","colab_type":"text"},"cell_type":"markdown","source":["Сначала нужно подготовить текст: отделить всю пунктуацию пробелами, иначе keras.tokenizer не сможет пунктуацию считать как отдельные токены. https://stackoverflow.com/questions/49073673/include-punctuation-in-keras-tokenizer\n","\n"]},{"metadata":{"id":"hiTIuSSvQT9s","colab_type":"code","colab":{}},"cell_type":"code","source":["# пишу функцию, которая добавляет пробелы с двух сторон к знакам препинания и смайликам.\n","my_punct = '«»...``\\'\\'•—!\"#$%&\\'()*+,-./:;<=>?@[\\\\]^_`{|}~'\n","def add_space(row):\n","  a = (''.join( (' '+i+' ') if i in my_punct else i for i in row['text']))\n","  text_with_spaces = (''.join( (' '+i+' ') if i in emoji.UNICODE_EMOJI else i for i in a))\n","  return text_with_spaces\n"],"execution_count":0,"outputs":[]},{"metadata":{"id":"gSgvUuJKVBYH","colab_type":"code","colab":{}},"cell_type":"code","source":["#делаю отдельную колонку с подготовленным текстом\n","df_features['extra_space'] =df_features.apply(add_space, axis=1)\n","\n"],"execution_count":0,"outputs":[]},{"metadata":{"id":"WjcOcBrTaEVQ","colab_type":"code","outputId":"95741f04-fba7-4fba-fa02-aab94df7b215","executionInfo":{"status":"ok","timestamp":1556358035806,"user_tz":-180,"elapsed":1952,"user":{"displayName":"Valerie Shelgunova","photoUrl":"https://lh5.googleusercontent.com/-i2CX_QSsamo/AAAAAAAAAAI/AAAAAAAAAB8/YRSVdMujpXw/s64/photo.jpg","userId":"14712883095412086889"}},"colab":{"base_uri":"https://localhost:8080/","height":282}},"cell_type":"code","source":["# смотрю,появилась ли новая колонка\n","df_features.head(2)"],"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>text</th>\n","      <th>likes</th>\n","      <th>label</th>\n","      <th>len_char</th>\n","      <th>punct</th>\n","      <th>punct_count</th>\n","      <th>punct%</th>\n","      <th>tokens</th>\n","      <th>tokens_count</th>\n","      <th>tokens%</th>\n","      <th>smiles</th>\n","      <th>smiles_count</th>\n","      <th>smiles%</th>\n","      <th>numbers_count</th>\n","      <th>numbers%</th>\n","      <th>latin_count</th>\n","      <th>latin%</th>\n","      <th>extra_space</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>76000</td>\n","      <td>#конкурс@the4gkz \\r\\r\\r\\nДля вашего удобства с...</td>\n","      <td>17</td>\n","      <td>0</td>\n","      <td>503</td>\n","      <td>#@.:•|-.—:./:./•|-.—/:./:://./|://./•|.—:./:.,!</td>\n","      <td>47</td>\n","      <td>0.093439</td>\n","      <td>['#', 'конкурс', '@', 'the4gkz', 'Для', 'вашег...</td>\n","      <td>81</td>\n","      <td>0.161034</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>23</td>\n","      <td>0.045726</td>\n","      <td>116</td>\n","      <td>0.230616</td>\n","      <td># конкурс @ the4gkz \\r\\r\\r\\nДля вашего удобст...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>76914</td>\n","      <td>Уже сегодня ночью (по МСК) начнётся один из са...</td>\n","      <td>34</td>\n","      <td>0</td>\n","      <td>669</td>\n","      <td>()—.—()!..,!(),—(,).:://..//</td>\n","      <td>28</td>\n","      <td>0.041854</td>\n","      <td>['Уже', 'сегодня', 'ночью', '(', 'по', 'МСК', ...</td>\n","      <td>111</td>\n","      <td>0.165919</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","      <td>49</td>\n","      <td>0.073244</td>\n","      <td>Уже сегодня ночью  ( по МСК )  начнётся один и...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["      id                                               text  likes  label  \\\n","0  76000  #конкурс@the4gkz \\r\\r\\r\\nДля вашего удобства с...     17      0   \n","1  76914  Уже сегодня ночью (по МСК) начнётся один из са...     34      0   \n","\n","   len_char                                            punct  punct_count  \\\n","0       503  #@.:•|-.—:./:./•|-.—/:./:://./|://./•|.—:./:.,!           47   \n","1       669                     ()—.—()!..,!(),—(,).:://..//           28   \n","\n","     punct%                                             tokens  tokens_count  \\\n","0  0.093439  ['#', 'конкурс', '@', 'the4gkz', 'Для', 'вашег...            81   \n","1  0.041854  ['Уже', 'сегодня', 'ночью', '(', 'по', 'МСК', ...           111   \n","\n","    tokens% smiles  smiles_count  smiles%  numbers_count  numbers%  \\\n","0  0.161034    NaN             0      0.0             23  0.045726   \n","1  0.165919    NaN             0      0.0              0  0.000000   \n","\n","   latin_count    latin%                                        extra_space  \n","0          116  0.230616   # конкурс @ the4gkz \\r\\r\\r\\nДля вашего удобст...  \n","1           49  0.073244  Уже сегодня ночью  ( по МСК )  начнётся один и...  "]},"metadata":{"tags":[]},"execution_count":10}]},{"metadata":{"id":"d_F2TgXSIJmv","colab_type":"code","colab":{}},"cell_type":"code","source":["# делю датасет на тест и трейн\n","X = df_features['extra_space'].values\n","y = df_features['label'].values\n","\n","text_train, text_test, y_train, y_test = train_test_split(X, y, random_state=20)"],"execution_count":0,"outputs":[]},{"metadata":{"id":"f7eUo8UNIJg4","colab_type":"code","outputId":"a405c008-d833-4c36-c955-d2f6f9006cb0","executionInfo":{"status":"ok","timestamp":1556358044163,"user_tz":-180,"elapsed":2871,"user":{"displayName":"Valerie Shelgunova","photoUrl":"https://lh5.googleusercontent.com/-i2CX_QSsamo/AAAAAAAAAAI/AAAAAAAAAB8/YRSVdMujpXw/s64/photo.jpg","userId":"14712883095412086889"}},"colab":{"base_uri":"https://localhost:8080/","height":106}},"cell_type":"code","source":["# ставлю в токенайзере пустой фильтр, чтобы он не отфильтровывал знаки препинания\n","tokenizer = Tokenizer(filters=[])\n","tokenizer.fit_on_texts(text_train)\n","\n","X_train = tokenizer.texts_to_sequences(text_train)\n","X_test = tokenizer.texts_to_sequences(text_test)\n","\n","vocab_size = len(tokenizer.word_index) + 1  # Adding 1 because of reserved 0 index\n","print(vocab_size)\n","# смотрю, как закодировались слова:\n","print(text_train[49])\n","print(X_train[49])\n","print(text_train[610])\n","print(X_train[610])\n","\n","\n"],"execution_count":12,"outputs":[{"output_type":"stream","text":["61614\n","а они не отстали\n","[13, 45, 6, 25224]\n","Служить ментом ,  чё\n","[25716, 25717, 1, 853]\n"],"name":"stdout"}]},{"metadata":{"id":"MUB0QE5bLEtM","colab_type":"text"},"cell_type":"markdown","source":["The indexing is ordered after the most common words in the text. Unknown words (words that are not in the vocabulary) are denoted in Keras with word_count + 1 since they can also hold some information."]},{"metadata":{"id":"H2qIO5t_crmN","colab_type":"text"},"cell_type":"markdown","source":["One problem that we have is that each text sequence has in most cases different length of words. To counter this, you can use pad_sequence() which simply pads the sequence of words with zeros. By default, it prepends zeros but we want to append them. Typically it does not matter whether you prepend or append zeros."]},{"metadata":{"id":"-_Hdn8l4czHN","colab_type":"text"},"cell_type":"markdown","source":["Additionally you would want to add a maxlen parameter to specify how long the sequences should be. This cuts sequences that exceed that number."]},{"metadata":{"id":"_Xgvt_73ameP","colab_type":"code","outputId":"16c403f0-1105-4a06-a2d8-553223802eca","executionInfo":{"status":"ok","timestamp":1556358050591,"user_tz":-180,"elapsed":851,"user":{"displayName":"Valerie Shelgunova","photoUrl":"https://lh5.googleusercontent.com/-i2CX_QSsamo/AAAAAAAAAAI/AAAAAAAAAB8/YRSVdMujpXw/s64/photo.jpg","userId":"14712883095412086889"}},"colab":{"base_uri":"https://localhost:8080/","height":177}},"cell_type":"code","source":[" maxlen = 100\n","\n","X_train = pad_sequences(X_train, padding='post', maxlen=maxlen)\n","X_test = pad_sequences(X_test, padding='post', maxlen=maxlen)\n","\n","print(X_train[0])"],"execution_count":13,"outputs":[{"output_type":"stream","text":["[    6 25181  5262   305   337    15     0     0     0     0     0     0\n","     0     0     0     0     0     0     0     0     0     0     0     0\n","     0     0     0     0     0     0     0     0     0     0     0     0\n","     0     0     0     0     0     0     0     0     0     0     0     0\n","     0     0     0     0     0     0     0     0     0     0     0     0\n","     0     0     0     0     0     0     0     0     0     0     0     0\n","     0     0     0     0     0     0     0     0     0     0     0     0\n","     0     0     0     0     0     0     0     0     0     0     0     0\n","     0     0     0     0]\n"],"name":"stdout"}]},{"metadata":{"id":"hLragesLmCLX","colab_type":"text"},"cell_type":"markdown","source":["Now you can use the Embedding Layer of Keras which takes the previously calculated integers and maps them to a dense vector of the embedding. You will need the following parameters:\n","\n","input_dim: the size of the vocabulary\n","\n","output_dim: the size of the dense vector\n","\n","input_length: the length of the sequence\n","\n","With the Embedding layer we have now a couple of options. One way would be to take the output of the embedding layer and plug it into a Dense layer. In order to do this you have to add a Flatten layer in between that prepares the sequential input for the Dense layer:"]},{"metadata":{"id":"fZ-y_8zFmSIE","colab_type":"code","colab":{}},"cell_type":"code","source":["class PlotLosses(keras.callbacks.Callback):\n","    def on_train_begin(self, logs={}):\n","        self.i = 0\n","        self.x = []\n","        self.losses = []\n","        self.val_losses = []\n","        \n","        self.fig = plt.figure()\n","        \n","        self.logs = []\n","\n","    def on_epoch_end(self, epoch, logs={}):\n","        \n","        self.logs.append(logs)\n","        self.x.append(self.i)\n","        self.losses.append(logs.get('loss'))\n","        self.val_losses.append(logs.get('val_loss'))\n","        self.i += 1\n","        \n","        clear_output(wait=True)\n","        plt.plot(self.x, self.losses, label=\"loss\")\n","        plt.legend()\n","        plt.show();\n","        \n","plot_losses = PlotLosses()"],"execution_count":0,"outputs":[]},{"metadata":{"id":"eq1V1jxDpWou","colab_type":"code","colab":{}},"cell_type":"code","source":["def classif_report(current_model):\n","    predY=current_model.predict(X_test) \n","    new_ar = []\n","    for el in predY:\n","        new_ar.append(np.argmax(el))\n","    print(classification_report(y_test, new_ar))\n"],"execution_count":0,"outputs":[]},{"metadata":{"id":"Q-mmAZypw_iD","colab_type":"text"},"cell_type":"markdown","source":["## Model 1"]},{"metadata":{"id":"HHfiE0JxamSI","colab_type":"code","outputId":"ddc27357-9596-4964-e4fc-ebfbce225799","executionInfo":{"status":"ok","timestamp":1556359559543,"user_tz":-180,"elapsed":749,"user":{"displayName":"Valerie Shelgunova","photoUrl":"https://lh5.googleusercontent.com/-i2CX_QSsamo/AAAAAAAAAAI/AAAAAAAAAB8/YRSVdMujpXw/s64/photo.jpg","userId":"14712883095412086889"}},"colab":{"base_uri":"https://localhost:8080/","height":319}},"cell_type":"code","source":["embedding_dim = 50\n","\n","model1 = Sequential()\n","model1.add(layers.Embedding(input_dim=vocab_size, \n","                           output_dim=embedding_dim, \n","                           input_length=maxlen))\n","model1.add(layers.Flatten())\n","model1.add(layers.Dense(10, activation='relu'))\n","model1.add(layers.Dense(10, activation='relu'))\n","model1.add(layers.Dense(3, activation=tf.nn.softmax))\n","model1.compile(loss=\"sparse_categorical_crossentropy\",optimizer='rmsprop',metrics=['sparse_categorical_accuracy'])\n","model1.summary()"],"execution_count":24,"outputs":[{"output_type":"stream","text":["_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding_3 (Embedding)      (None, 100, 50)           3080700   \n","_________________________________________________________________\n","flatten_3 (Flatten)          (None, 5000)              0         \n","_________________________________________________________________\n","dense_7 (Dense)              (None, 10)                50010     \n","_________________________________________________________________\n","dense_8 (Dense)              (None, 10)                110       \n","_________________________________________________________________\n","dense_9 (Dense)              (None, 3)                 33        \n","=================================================================\n","Total params: 3,130,853\n","Trainable params: 3,130,853\n","Non-trainable params: 0\n","_________________________________________________________________\n"],"name":"stdout"}]},{"metadata":{"id":"k-95yxOqo-Wa","colab_type":"code","outputId":"e5c3a9a7-5948-4cdd-ba4c-c639a6e74e7a","executionInfo":{"status":"ok","timestamp":1556359783645,"user_tz":-180,"elapsed":3,"user":{"displayName":"Valerie Shelgunova","photoUrl":"https://lh5.googleusercontent.com/-i2CX_QSsamo/AAAAAAAAAAI/AAAAAAAAAB8/YRSVdMujpXw/s64/photo.jpg","userId":"14712883095412086889"}},"colab":{"base_uri":"https://localhost:8080/","height":269}},"cell_type":"code","source":["history = model1.fit(X_train, y_train, epochs=5, callbacks = [plot_losses])"],"execution_count":25,"outputs":[{"output_type":"display_data","data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAAX0AAAD8CAYAAACb4nSYAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDMuMC4zLCBo\ndHRwOi8vbWF0cGxvdGxpYi5vcmcvnQurowAAIABJREFUeJzt3Xl81fWd7/HXJxuBJARCFiAJJJEA\ngaAIkboBKi5YFWgVq70zrZ22Tme07a29XRx3pdfW3qudts51HGtHZ8aqWIsoFaqAInUjQdBAAoTN\nJCxZ2Jfs3/vHOTApDeYAJ+d3lvfz8cjD8/v9vr9zPueH533O7/tbvuacQ0REYkOc1wWIiEjoKPRF\nRGKIQl9EJIYo9EVEYohCX0Qkhij0RURiiEJfRCSGKPRFRGKIQl9EJIYkeF3AiTIzM11BQYHXZYiI\nRJSKioom51xWb+3CLvQLCgooLy/3ugwRkYhiZtsDaafuHRGRGKLQFxGJIQp9EZEYEnZ9+iIiwdDe\n3k5dXR0tLS1elxJUycnJ5OXlkZiYeFrrK/RFJCrV1dWRlpZGQUEBZuZ1OUHhnKO5uZm6ujoKCwtP\n6znUvSMiUamlpYUhQ4ZETeADmBlDhgw5o70Xhb6IRK1oCvxjzvQ9RU3oH27t4GeLq/m0+YjXpYiI\nhK2AQt/MZprZBjOrMbMf97D8FjNrNLM1/r9vdFv2VTPb5P/7ajCL7+5gSwfPvruN+xZWonF/RSQc\npKamel3CX+k19M0sHngcuBoYB9xsZuN6aPqCc26i/+8p/7oZwH3A54ApwH1mNjho1XczND2Z710x\nmuUbGvnT+t198RIiIhEvkF/6U4Aa59wW51wb8DwwO8Dnvwp4wzm3xzm3F3gDmHl6pfbuqxcWMHZo\nGg8sXMeRto6+ehkRkVPinOMHP/gBpaWlTJgwgRdeeAGAnTt3Mm3aNCZOnEhpaSnvvPMOnZ2d3HLL\nLcfbPvbYY0GtJZBTNnOB2m7Tdfh+uZ/oejObBmwEvuecqz3JurmnWWuvEuPjmDenlBueeI9/XrqJ\nO68u6auXEpEI8sCr61i/40BQn3Pc8IHcd934gNq+/PLLrFmzhrVr19LU1MR5553HtGnTeO6557jq\nqqu466676Ozs5MiRI6xZs4b6+noqKysB2LdvX1DrDtaB3FeBAufc2fh+zT9zKiub2a1mVm5m5Y2N\njWdUSFlBBjeW5fGbd7aycffBM3ouEZFgWLlyJTfffDPx8fHk5OQwffp0Vq1axXnnncdvf/tb7r//\nfj755BPS0tIoKipiy5YtfPvb32bx4sUMHDgwqLUE8ku/HsjvNp3nn3ecc6652+RTwCPd1r3khHXf\nOvEFnHNPAk8ClJWVnfFR2B9fXcKf1u/m7gWVvHDr+VF52paIBC7QX+ShNm3aNFasWMGiRYu45ZZb\nuOOOO/jKV77C2rVrWbJkCU888QQvvvgiTz/9dNBeM5Bf+quAYjMrNLMk4CZgYfcGZjas2+QsoMr/\neAlwpZkN9h/AvdI/r09lpCTxo5lj+XDrHv7wUX3vK4iI9KGpU6fywgsv0NnZSWNjIytWrGDKlCls\n376dnJwcvvnNb/KNb3yD1atX09TURFdXF9dffz3z5s1j9erVQa2l11/6zrkOM7sdX1jHA08759aZ\n2YNAuXNuIfAdM5sFdAB7gFv86+4xs4fwfXEAPOic2xPUd3ASXyrL58XyWn6yqIoZY3NIH3B696kQ\nETlTX/jCF3jvvfc455xzMDMeeeQRhg4dyjPPPMPPf/5zEhMTSU1N5dlnn6W+vp6vfe1rdHV1AfDw\nww8HtRYLt3Pay8rKXLAGUVm3Yz/X/WolX/7cCObNmRCU5xSRyFBVVUVJSXSezNHTezOzCudcWW/r\nRs0VuT0ZPzydr15YwH998Clra4N7BFxEJBJFdegD3HHFaLJS+3H3gko6u8Jrr0ZEJNSiPvTTkhO5\n+9pxfFK/n+c+CGgISRGJEuHWfR0MZ/qeoj70Aa47exgXjRrCI0s20HAwugZUEJGeJScn09zcHFXB\nf+x++snJyaf9HDExiIqZ8dDsUmb+4h0e/mM1j31potcliUgfy8vLo66ujjO94DPcHBs563TFROgD\nFGWl8vfTi/jVshpuLMvngrOGeF2SiPShxMTE0x5dKprFRPfOMbddOor8jP7c80olbR1dXpcjIhJy\nMRX6yYnxPDBrPDUNh3hq5RavyxERCbmYCn2Ay8bmcNX4HH65dBN1ezXKlojElpgLfYB7rxuPYTzw\n6nqvSxERCamYDP3cQf357uXFvLF+N29qlC0RiSExGfoAf3dRIcXZqdz/6jqOtnV6XY6ISEjEbOgn\nJcTx0JxS6vYe5dfLN3ldjohISMRs6AOcXzSEL07K5ckVW6hpOOR1OSIifS6mQx/gzqtL6J8Yz72v\nVEbV5doiIj2J+dDPSuvHD2aO5d3NzSxcu8PrckRE+lTMhz7Al6eM4Oy8dOYtquJAS7vX5YiI9BmF\nPhAfZ/xkzgSaDrXy6J82el2OiEifUej7TchL52/PH8mz722jsn6/1+WIiPQJhX43379yDBkpSdy1\noJIujbIlIlFIod9Nev9E7rqmhLW1+/jdqk+9LkdEJOgU+ieYMzGX84syeGTxBpoOtXpdjohIUCn0\nT2BmzJtTyuHWDn76erXX5YiIBJVCvwejstP45rQiXqqo48Ote7wuR0QkaBT6J/Hty0aRO6g/9yyo\npL1To2yJSHRQ6J/EgKQE7rtuHBt2H+S3f97qdTkiIkGh0P8MV44fyuUl2fzizU3s2HfU63JERM6Y\nQr8X9103ni7neOg1jbIlIpFPod+L/IwBfPuyYl6v3MXyDQ1elyMickYU+gH4xtRCirJSuO+VdbS0\na5QtEYlcAYW+mc00sw1mVmNmP/6MdtebmTOzMv90gZkdNbM1/r8nglV4KPVLiGfe7FI+3XOEf3lr\ns9fliIictl5D38zigceBq4FxwM1mNq6HdmnAd4EPTli02Tk30f/3rSDU7IkLR2Uye+JwnnhrM1ub\nDntdjojIaQnkl/4UoMY5t8U51wY8D8zuod1DwM+AliDWF1bu+nwJ/RLiNMqWiESsQEI/F6jtNl3n\nn3ecmU0C8p1zi3pYv9DMPjKzt81s6umX6r3sgcl8/8rRvLOpiT9+ssvrckRETtkZH8g1szjgUeD7\nPSzeCYxwzp0L3AE8Z2YDe3iOW82s3MzKGxsbz7SkPvU3549k/PCBPPjaOg5qlC0RiTCBhH49kN9t\nOs8/75g0oBR4y8y2AecDC82szDnX6pxrBnDOVQCbgdEnvoBz7knnXJlzriwrK+v03kmIJMTHMW9O\nKQ0HW/nFm5u8LkdE5JQEEvqrgGIzKzSzJOAmYOGxhc65/c65TOdcgXOuAHgfmOWcKzezLP+BYMys\nCCgGtgT9XYTYuSMGc/OUEfz7u9tYv+OA1+WIiASs19B3znUAtwNLgCrgRefcOjN70Mxm9bL6NOBj\nM1sDvAR8yzkXFbet/OFVY0jvn8g9r2iULRGJHBZuZ6GUlZW58vJyr8sIyPzyWn7w0sf87PoJfOm8\nEV6XIyIxzMwqnHNlvbXTFbln4IbJeUwpyODh16vZc7jN63JERHql0D8DZsZDc0o52NLBI4s1ypaI\nhD+F/hkaMzSNr19cyPOraqnYvtfrckREPpNCPwi+O6OYYenJ3L2gkg6NsiUiYUyhHwQp/XyjbFXt\nPMAz7233uhwRkZNS6AfJVeOHcsmYLB790wZ27Y/a2w+JSIRT6AeJmfHArPG0dznmLdIoWyISnhT6\nQTRySAq3XTKK1z7eyTubwvseQiISmxT6Qfb304soGDKAezXKloiEIYV+kCUnxvPg7FK2Nh3myRUR\nf5shEYkyCv0+MG10FtecPYxfL69he7NG2RKR8KHQ7yP3XDOOxDjj/oXrNMqWiIQNhX4fGZqezPeu\nGM3yDY0sWadRtkQkPCj0+9AtFxYwdmgaD7y6nsOtHV6XIyKi0O9LCfFx/OQLpezc38Ivl2qULRHx\nnkK/j00emcGXyvL5zcqtbNh10OtyRCTGKfRD4EdXjyU1OYF7FlTqoK6IeEqhHwIZKUn8eOZYPty2\nh9+vru99BRGRPqLQD5Eby/KZNGIQD/+xin1HNMqWiHhDoR8icXHGvDkT2HukjZ8v2eB1OSISoxT6\nITRu+EBuubCQ5z78lDW1+7wuR0RikEI/xL53RTHZaf24e8EndHbpoK6IhJZCP8TSkhO559pxVNYf\n4D/f1yhbIhJaCn0PXDNhGFOLM/k/SzbQcFCjbIlI6Cj0PXBslK3Wji7+96Iqr8sRkRii0PdIUVYq\n35pexII1O3h3c5PX5YhIjFDoe+gfLx3FiIwB3LOgkraOLq/LEZEYoND3UHJiPA/MHs/mxsP82zsa\nZUtE+p5C32OXjslm5vih/GrZJmr3HPG6HBGJcgr9MHDvdeOIM+OBV9d7XYqIRLmAQt/MZprZBjOr\nMbMff0a7683MmVlZt3l3+tfbYGZXBaPoaDN8UH++O6OYN6t288b63V6XIyJRrNfQN7N44HHgamAc\ncLOZjeuhXRrwXeCDbvPGATcB44GZwL/4n09O8HcXFzI6J5X7F67jSJtG2RKRvhHIL/0pQI1zbotz\nrg14HpjdQ7uHgJ8B3a82mg0875xrdc5tBWr8zycnSIyPY96cCdTvO8qvl9V4XY6IRKlAQj8XqO02\nXeefd5yZTQLynXOLTnVd//q3mlm5mZU3NjYGVHg0mlKYwfWT8vi3d7ZQ06BRtkQk+M74QK6ZxQGP\nAt8/3edwzj3pnCtzzpVlZWWdaUkR7c7Pj2VAUgL3LFinUbZEJOgCCf16IL/bdJ5/3jFpQCnwlplt\nA84HFvoP5va2rpwgM7UfP5w5hve2NPPKmh1elyMiUSaQ0F8FFJtZoZkl4Tswu/DYQufcfudcpnOu\nwDlXALwPzHLOlfvb3WRm/cysECgGPgz6u4gyN503gnPyBzFvURX7j7Z7XY6IRJFeQ9851wHcDiwB\nqoAXnXPrzOxBM5vVy7rrgBeB9cBi4DbnXOeZlx3d4uOMebNL2XO4lUf/pFG2RCR4LNz6jcvKylx5\nebnXZYSF+16p5D/e384rt13MhLx0r8sRkTBmZhXOubLe2umK3DB2x5VjyEjRKFsiEjwK/TCW3j+R\ne64tYW3dfn734adelyMiUUChH+ZmnTOcC4qG8MjiapoOtXpdjohEOIV+mDMzHpoznqPtnTz8x2qv\nyxGRCKfQjwCjstP45tQifr+6jg+2NHtdjohEMIV+hPj2ZcXkDurP3Qsqae/UKFsicnoU+hGif1I8\nD8waz6aGQzy9cqvX5YhIhFLoR5DLx+VweUkOv3hzEzv2HfW6HBGJQAr9CHPfdeNwOB7UKFsichoU\n+hEmP2MA376smMXrdrG8usHrckQkwij0I9A3pxZxVlYK9y6spKVdtzISkcAp9CNQUkIcD80ppXbP\nUf5luUbZEpHAKfQj1IVnZTJn4nCeeHsLWxoPeV2OiEQIhX4E+6drSuiXGMe9r2iULREJjEI/gmWn\nJfODq8awsqaJ1z7e6XU5IhIBFPoR7n98biSluQN56LX1HGzRKFsi8tkU+hEuPs6YN2cCjYdaeeyN\nTV6XIyJhTqEfBSbmD+LLU0bw7+9uZd2O/V6XIyJhTKEfJX541VgGD0jingWVdGmULRE5CYV+lEgf\nkMg/fb6E1Z/u48XyWq/LEZEwpdCPIl+clMuUggx+uriaPYfbvC5HRMKQQj+K+EbZKuVQSwc/e12j\nbInIX1PoR5kxQ9P4+sWFvFBeS/m2PV6XIyJhRqEfhb4zo5jh6cncvaCSDo2yJSLdKPSjUEq/BO69\nbjzVuw7y7+9u87ocEQkjCv0oddX4HC4dk8Vjb2xk1/4Wr8sRkTCh0I9SZsYDs0rp6HI8tEijbImI\nj0I/io0YMoDbLx3Foo93smJjo9fliEgYUOhHuVunF1GYmcK9r2iULRFR6Ee9fgnxPDh7PNuaj/Cv\nb2/xuhwR8VhAoW9mM81sg5nVmNmPe1j+LTP7xMzWmNlKMxvnn19gZkf989eY2RPBfgPSu6nFWVx7\n9jAef6uG7c2HvS5HRDzUa+ibWTzwOHA1MA64+Viod/Occ26Cc24i8AjwaLdlm51zE/1/3wpW4XJq\n7rl2HEnxGmVLJNYF8kt/ClDjnNvinGsDngdmd2/gnDvQbTIFUKqEmZyBydxxxWje3tjI4spdXpcj\nIh4JJPRzge63bazzz/sLZnabmW3G90v/O90WFZrZR2b2tplN7ekFzOxWMys3s/LGRp1l0le+csFI\nSoYN5IFX13OotcPrckTEA0E7kOuce9w5dxbwI+Bu/+ydwAjn3LnAHcBzZjawh3WfdM6VOefKsrKy\nglWSnCAhPo55c0rZdaCFXy7VKFsisSiQ0K8H8rtN5/nnnczzwBwA51yrc67Z/7gC2AyMPr1SJRgm\njxzMTefl85uVW6nedaD3FUQkqgQS+quAYjMrNLMk4CZgYfcGZlbcbfIaYJN/fpb/QDBmVgQUAzpv\n0GM/mjmWgckJ3P0HjbIlEmt6DX3nXAdwO7AEqAJedM6tM7MHzWyWv9ntZrbOzNbg68b5qn/+NOBj\n//yXgG8553S/X48NTknizqtLKN++l9ueW81rH+/gQEu712WJSAhYuJ2+V1ZW5srLy70uI+p1dTnm\nLariDx/VsfdIOwlxxpTCDGaU5HB5STYjh6R4XaKInAIzq3DOlfXaTqEf2zq7HB99upel1Q0srdrN\nxt2HADgrK4XLS3K4bGw2k0cOJiFeF2+LhDOFvpyWT5uPsKx6N0urG3h/SzPtnY70/olcMiaLGSU5\nTB+dRXr/RK/LFJETKPTljB1saWflpiberGpg+YYG9hxuIz7OOK9g8PG9gKKsVK/LFBEU+hJknV2O\nNbX7WFq1m2XVDVTvOghAUWYKM0qyuWxsDmUFg0lUN5CIJxT60qdq9xxh+YYG3qxq4P3NzbR1djEw\nOYFLxmQzoySbS0Znkz5A3UAioaLQl5A51NrByk1NLK3azfINDTQd8nUDTR45mMtLsplRkkNRZgpm\n5nWpIlFLoS+e6OpyrK3bx9KqBpZWN1C103fVb8GQAcwoyWHG2GzOK8xQN5BIkCn0JSzU7zvKsirf\n2UDvbm6mraOLtOQEpo/OOt4NNDglyesyRSKeQl/CzuHWDv5c03R8L6DpUCtx5rsf0LGLws7KSlU3\nkMhpUOhLWOvqcnxSv5+l/r2AdTt83UAjMgYwoySbGWNzmFKYQVKCuoFEAqHQl4iyc/9RllY1sKy6\ngT/XNNHa0UVavwSmjc7isrHZXDo2mwx1A4mclEJfItaRtg7+XNPsuzK4qoGGg62YwaQRg4/vBYzO\nUTeQSHcKfYkKXV2OdTsO8GbVbpZW76ay3tcNlDe4//Grgj9XlEG/hHiPKxXxlkJfotKu/S0sq25g\nWfVuVtY00dLeRUpS/F90A2Wm9vO6TJGQU+hL1Dva1sm7m5tYWt3AsqoGdh1owQwm5g/i8pIcZpRk\nMyYnTd1AEhMU+hJTnPN1A/lOB93Nx3X7Acgd1N9/b6Bszi8aQnKiuoEkOin0JaY1HPB1A71Z1cDK\nmkZa2rsYkBTP1OJMZozN4dKx2WSlqRtIoodCX8Svpb2T9zY3s9R/NtDO/S0AnJM/iMvH+u4NVDJM\n3UAS2RT6Ij1wzrF+5wGWVTXwZnUDa2v3ATA8PZnL/KeDXnCWuoEk8ij0RQLQcLCFt6obebPKdzbQ\nkbZO+ifGc3FxJjPG+o4FZA9M9rpMkV4p9EVOUUt7J+9vaWZZdQNLqxqo33cUgLPz0pkx1nc20Pjh\nA9UNJGFJoS9yBpxzVO866D8YvJs1tftwDrLT+jFtdBbTR2cxtTiTQQN0awgJDwp9kSBqOtTK8uoG\n3trYyMpNTew/2k6c+Q4GXzI6m+ljspiQm058nPYCxBsKfZE+0tHZxdq6/by9sZG3NzbycZ1vL2Dw\ngESmFvv3AkZnkp2mYwESOgp9kRDZc7iNdzb5vgBWbGyi6VArAOOHD2S6vyto0kgNGi99S6Ev4oGu\nLt8pocf2AlZv30tHlyO1XwIXjRrC9NHZTBudSd7gAV6XKlFGoS8SBg60tPNuTbPvS2BDAzv8F4aN\nyk49vhcwpTBD1wXIGVPoi4QZ5xybGw/x1gbfXsAHW/fQ1tFFcmIc5xcNOf4lUJiZotNC5ZQp9EXC\n3NG2Tt7f2szbGxpZsbGRLU2HAcjP6O//AsjmwrOGkNIvweNKJRIENfTNbCbwz0A88JRz7qcnLP8W\ncBvQCRwCbnXOrfcvuxP4un/Zd5xzSz7rtRT6Eqs+bT7C25saeXtDI+9u9l0dnBhvlI3MYPoY317A\n2KG6R5D0LGihb2bxwEbgCqAOWAXcfCzU/W0GOucO+B/PAv7ROTfTzMYBvwOmAMOBN4HRzrnOk72e\nQl8EWjs6qdi+138soJHqXQcByBnY7/hewMWjMkkfkOhxpRIuAg39QPYbpwA1zrkt/id+HpgNHA/9\nY4HvlwIc+yaZDTzvnGsFtppZjf/53gvoXYjEqH4J8Vx4ViYXnpXJnVeXsGt/Cyv8p4UurtzFi+V1\nxBmcO2Lw8WMBE3LTidPFYdKLQEI/F6jtNl0HfO7ERmZ2G3AHkARc1m3d909YN/e0KhWJYUPTk7mx\nLJ8by/L/6uKwx97cyKNvbCQjJYmpxZn+W0RkabwA6VHQjhA55x4HHjezLwN3A18NdF0zuxW4FWDE\niBHBKkkkKiXExzF55GAmjxzMHVeMpvlQKytrmnwHhDc18sqaHQCU5g483hV07ohBujhMgMBCvx7I\n7zad5593Ms8D/+9U1nXOPQk8Cb4+/QBqEhG/Ian9mD0xl9kTc//y4rANjTzx9hYeX76ZtH4JXDQq\nk+ljspg2OovcQf29Lls8EkjorwKKzawQX2DfBHy5ewMzK3bObfJPXgMce7wQeM7MHsV3ILcY+DAY\nhYvIX4uLM0pz0ynNTee2S0f5Lw5rOv4lsHjdLgCKj10cNiaL8wp0cVgs6TX0nXMdZnY7sATfKZtP\nO+fWmdmDQLlzbiFwu5ldDrQDe/F37fjbvYjvoG8HcNtnnbkjIsE1MDmRmaXDmFk6DOccNQ2Hjh8L\nePa97Ty1civJiXFccOzisDHZFAwZoNNCo5guzhKJUUfaOvhgy57jXwJb/ReHjcgYcPyMoAt0cVjE\n0BW5InJKtjcfZoX/C+Ddzc0caeskKT6O8woHHz8gPDonVXsBYUqhLyKnrbWjk4pte4/vBRy7OGzo\nwOTjxwIuGpVJen9dHBYuFPoiEjQ79x/lnY2+A8IrNjVysKWD+Djj3PxBx78ESofr4jAvKfRFpE90\ndHaxpnZft5HD9gOQkZLEtGLfaaFTi7PITNXFYaGk0BeRkGg61MrKTf69gI2NNB9uA2BCbjpXjsvh\ni5PzdF1ACCj0RSTkuroc63Yc4O2NDSzf0EjF9r2YwUVnZTK3LI+rxg/VNQF9RKEvIp6r3XOElyrq\neKmijvp9R0lLTuC6c4Yzd3IeE/MH6UygIFLoi0jY6OpyvL+lmfkVdbxeuZOW9i6Ks1O5YXIeX5iU\nS3ZastclRjyFvoiEpQMt7Sz6eCfzy2tZ/ek+4uOMS0ZnMbcsj8vG5pCUoBvDnQ6FvoiEvc2Nh3ip\noo6XV9ex+0ArGSlJzJ44nBsm5zF+eLrX5UUUhb6IRIyOzi7eqWnipfI63li/m7bOLsYNG8jcsjzm\nTMxlcEqS1yWGPYW+iESkvYfbWLh2B/MraqmsP0BivHF5SQ5zy/KYVpxFgsYF6JFCX0QiXtXOA8wv\nr2PBmnr2HG4jO60fX5iUy9zJ+YzKTvW6vLCi0BeRqNHW0cWy6gZeqqhl+YZGOrsc544YxNzJ+Vx7\nzjAGJuseQAp9EYlKDQdbeOUjX/fPxt2HSE6MY+b4ocwty+eCoiExe/8fhb6IRDXnHB/X7Wd+RS0L\n1+zgQEsHuYP6c/2kXG6YnM+IIQO8LjGkFPoiEjNa2jv50/rdzC+vZWVNE87B5wozmFuWz+cnDGVA\nUvQPBKPQF5GYtGPfUV5e7bv1w7bmI6QkxXPN2cOYW5ZP2cjBUXvrB4W+iMQ05xyrtu1lfnktiz7Z\nyZG2TgozU7hhch5fnJTLsPTouvOnQl9ExO9wawevV+5ifnktH2zdQ5zBxcVZzJ2cxxXjcqLizp8K\nfRGRHmxvPszvK+r4/ep66vcdZWByArMmDmfu5HzOzkuP2O4fhb6IyGfo6nK8u7mZ+RW1LK7cRWtH\nF6NzUpk7OZ855+aSlRZZI38p9EVEArT/aDuvfbyD+eV1rKndR0KcccmYbP+dP7NJjIBbPyj0RURO\nQ03DQeZX1PHy6noaD7YyJCWJOefmMrcsj7FDB3pd3kkp9EVEzkBHZxcrNjUyv7yON6t2097pmJCb\nztyyPGadM5xBA8Lrzp8KfRGRINlzuI1X1tQzv7yO9TsPkBQfxxXjc7hhsu/On/FhcOsHhb6ISB9Y\nt2M/88vreGVNPXuPtJMzsB9fnJTH3Ml5FGV5d+dPhb6ISB9q7ehkWVUD8yvqeHuj786fk0cOZu7k\nPK45exhpIb7zp0JfRCREGg608IeP6plfUUdNg+/On58vHcYNZXmcXxiaO38q9EVEQsw5x5rafcyv\nqOPVNTs42NpB3uD+3DA5j+sn5ZGf0Xd3/gxq6JvZTOCfgXjgKefcT09YfgfwDaADaAT+zjm33b+s\nE/jE3/RT59ysz3othb6IRIOW9k6WrNvF/PI6/rzZd+fPC4qGMLcsj6tLh9E/Kbi3fgha6JtZPLAR\nuAKoA1YBNzvn1ndrcynwgXPuiJn9A3CJc+5L/mWHnHMBH91Q6ItItKnfd5TfV/ju/PnpniOk9kvg\n2rOHMbcsj0kjgnPnz2CG/gXA/c65q/zTdwI45x4+SftzgV875y7yTyv0RUTw3frhw217mF9exx8/\n2cnR9k6KslKOd//kDEw+7ecONPQDubY4F6jtNl3nn3cyXwde7zadbGblZva+mc0J4PVERKJSXJxx\nftEQ/u+N57Dq7st55IazyUzpxyOLN3DBw0u57bnVfV5DUIeTMbO/AcqA6d1mj3TO1ZtZEbDMzD5x\nzm0+Yb1bgVsBRowYEcySRER6bxjEAAAFEUlEQVTCUmq/BG4sy+fGsny2NR3mpYo6HH1/Yk0goV8P\n5HebzvPP+wtmdjlwFzDdOdd6bL5zrt7/3y1m9hZwLvAXoe+cexJ4EnzdO6f2FkREIltBZgr/66ox\nIXmtQLp3VgHFZlZoZknATcDC7g38/fj/CsxyzjV0mz/YzPr5H2cCFwHrERERT/T6S98512FmtwNL\n8J2y+bRzbp2ZPQiUO+cWAj8HUoH5/qPQx07NLAH+1cy68H3B/LT7WT8iIhJaujhLRCQKBPPsHRER\niRIKfRGRGKLQFxGJIQp9EZEYotAXEYkhYXf2jpk1AtvP4CkygaYglRNMquvUqK5To7pOTTTWNdI5\nl9Vbo7AL/TNlZuWBnLYUaqrr1KiuU6O6Tk0s16XuHRGRGKLQFxGJIdEY+k96XcBJqK5To7pOjeo6\nNTFbV9T16YuIyMlF4y99ERE5iYgMfTObaWYbzKzGzH7cw/J+ZvaCf/kHZlYQJnXdYmaNZrbG//eN\nENX1tJk1mFnlSZabmf3SX/fHZjYpTOq6xMz2d9te94aornwzW25m681snZl9t4c2Id9mAdYV8m1m\nZslm9qGZrfXX9UAPbUL+mQywLk8+k/7Xjjezj8zstR6W9d32cs5F1B++2ztvBoqAJGAtMO6ENv8I\nPOF/fBPwQpjUdQu+8YNDvc2mAZOAypMs/zy+IS4NOB/fIPfhUNclwGsebK9hwCT/4zRgYw//liHf\nZgHWFfJt5t8Gqf7HicAHwPkntPHiMxlIXZ58Jv2vfQfwXE//Xn25vSLxl/4UoMY5t8U51wY8D8w+\noc1s4Bn/45eAGRaM4ebPvC5POOdWAHs+o8ls4Fnn8z4wyMyGhUFdnnDO7XTOrfY/PghU8dfjQod8\nmwVYV8j5t8Eh/2Si/+/Eg4Uh/0wGWJcnzCwPuAZ46iRN+mx7RWLoBzJQ+/E2zrkOYD8wJAzqArje\n3x3wkpnl97DcC4HW7oUL/Lvnr5vZ+FC/uH+3+lx8vxK783SbfUZd4ME283dVrAEagDeccyfdXiH8\nTAZSF3jzmfwF8EOg6yTL+2x7RWLoR7JXgQLn3NnAG/z3N7n0bDW+S8vPAX4FLAjli5tZKvB74H86\n5w6E8rU/Sy91ebLNnHOdzrmJ+MbQnmJmpaF43d4EUFfIP5Nmdi3Q4Jyr6OvX6kkkhn4gA7Ufb2Nm\nCUA60Ox1Xc65Zvffg8Y/BUzu45oCFcg2DTnn3IFju+fOuT8CieYba7nPmVkivmD9L+fcyz008WSb\n9VaXl9vM/5r7gOXAzBMWefGZ7LUujz6TFwGzzGwbvm7gy8zsP09o02fbKxJDv9eB2v3TX/U/vgFY\n5vxHRLys64Q+31n4+mTDwULgK/4zUs4H9jvndnpdlJkNPdaPaWZT8P3/2udB4X/N3wBVzrlHT9Is\n5NsskLq82GZmlmVmg/yP+wNXANUnNAv5ZzKQurz4TDrn7nTO5TnnCvDlxDLn3N+c0KzPtlevA6OH\nGxfYQO2/Af7DzGrwHSi8KUzq+o6ZzQI6/HXd0td1AZjZ7/Cd1ZFpZnXAffgOauGcewL4I76zUWqA\nI8DXwqSuG4B/MLMO4ChwUwi+vMH3S+xvgU/8/cEA/wSM6FabF9sskLq82GbDgGfMLB7fl8yLzrnX\nvP5MBliXJ5/JnoRqe+mKXBGRGBKJ3TsiInKaFPoiIjFEoS8iEkMU+iIiMUShLyISQxT6IiIxRKEv\nIhJDFPoiIjHk/wOgOMDYmo3P2QAAAABJRU5ErkJggg==\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"metadata":{"id":"C4GN_voqo-Sq","colab_type":"code","outputId":"f78d9941-f982-4273-b165-6f4bf697ed45","executionInfo":{"status":"ok","timestamp":1556359784402,"user_tz":-180,"elapsed":212758,"user":{"displayName":"Valerie Shelgunova","photoUrl":"https://lh5.googleusercontent.com/-i2CX_QSsamo/AAAAAAAAAAI/AAAAAAAAAB8/YRSVdMujpXw/s64/photo.jpg","userId":"14712883095412086889"}},"colab":{"base_uri":"https://localhost:8080/","height":195}},"cell_type":"code","source":["classif_report(model1)"],"execution_count":26,"outputs":[{"output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0       0.88      0.86      0.87      3443\n","           1       0.55      0.56      0.56      1132\n","           2       0.89      0.89      0.89      8384\n","\n","   micro avg       0.86      0.86      0.86     12959\n","   macro avg       0.77      0.77      0.77     12959\n","weighted avg       0.86      0.86      0.86     12959\n","\n"],"name":"stdout"}]},{"metadata":{"id":"fSyo2XE2qaeb","colab_type":"text"},"cell_type":"markdown","source":["Отличный результат для комментов второго уровня!"]},{"metadata":{"id":"0b9FsqLZxEdF","colab_type":"text"},"cell_type":"markdown","source":["## Model 2"]},{"metadata":{"id":"jf6j6TFS7K99","colab_type":"text"},"cell_type":"markdown","source":["Another way to work with embeddings is by using a MaxPooling1D/AveragePooling1D or a GlobalMaxPooling1D/GlobalAveragePooling1D layer after the embedding. You can think of the pooling layers as a way to downsample (a way to reduce the size of) the incoming feature vectors.\n","\n","In the case of max pooling you take the maximum value of all features in the pool for each feature dimension. In the case of average pooling you take the average, but max pooling seems to be more commonly used as it highlights large values.\n","\n","Global max/average pooling takes the maximum/average of all features whereas in the other case you have to define the pool size."]},{"metadata":{"id":"rgwjOfU9o-PC","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":319},"outputId":"28901a32-120b-4757-c22c-fbb0cc454b43","executionInfo":{"status":"ok","timestamp":1556352696900,"user_tz":-180,"elapsed":660,"user":{"displayName":"Valerie Shelgunova","photoUrl":"https://lh5.googleusercontent.com/-i2CX_QSsamo/AAAAAAAAAAI/AAAAAAAAAB8/YRSVdMujpXw/s64/photo.jpg","userId":"14712883095412086889"}}},"cell_type":"code","source":["embedding_dim = 50\n","\n","model2 = Sequential()\n","model2.add(layers.Embedding(input_dim=vocab_size, \n","                           output_dim=embedding_dim, \n","                           input_length=maxlen))\n","model2.add(layers.GlobalMaxPool1D())\n","model2.add(layers.Dense(10, activation='relu'))\n","model2.add(layers.Dense(10, activation='relu'))\n","model2.add(layers.Dense(3, activation=tf.nn.softmax))\n","model2.compile(loss=\"sparse_categorical_crossentropy\",optimizer='rmsprop',metrics=['sparse_categorical_accuracy'])\n","model2.summary()"],"execution_count":22,"outputs":[{"output_type":"stream","text":["_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding_3 (Embedding)      (None, 100, 50)           3080700   \n","_________________________________________________________________\n","global_max_pooling1d_3 (Glob (None, 50)                0         \n","_________________________________________________________________\n","dense_7 (Dense)              (None, 10)                510       \n","_________________________________________________________________\n","dense_8 (Dense)              (None, 10)                110       \n","_________________________________________________________________\n","dense_9 (Dense)              (None, 3)                 33        \n","=================================================================\n","Total params: 3,081,353\n","Trainable params: 3,081,353\n","Non-trainable params: 0\n","_________________________________________________________________\n"],"name":"stdout"}]},{"metadata":{"id":"dhKDF4Y8o-L2","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":269},"outputId":"105b59ba-6dde-4e6e-d4f7-a965d3fd00e4","executionInfo":{"status":"ok","timestamp":1556353592301,"user_tz":-180,"elapsed":5,"user":{"displayName":"Valerie Shelgunova","photoUrl":"https://lh5.googleusercontent.com/-i2CX_QSsamo/AAAAAAAAAAI/AAAAAAAAAB8/YRSVdMujpXw/s64/photo.jpg","userId":"14712883095412086889"}}},"cell_type":"code","source":["history = model2.fit(X_train, y_train, epochs=20, callbacks = [plot_losses])"],"execution_count":23,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"metadata":{"id":"46kfTorPo-IY","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":195},"outputId":"565eeb81-ebc2-4055-ebf9-79c7f6ef77c8","executionInfo":{"status":"ok","timestamp":1556353794675,"user_tz":-180,"elapsed":847,"user":{"displayName":"Valerie Shelgunova","photoUrl":"https://lh5.googleusercontent.com/-i2CX_QSsamo/AAAAAAAAAAI/AAAAAAAAAB8/YRSVdMujpXw/s64/photo.jpg","userId":"14712883095412086889"}}},"cell_type":"code","source":["classif_report(model2)"],"execution_count":24,"outputs":[{"output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0       0.83      0.82      0.83      3443\n","           1       0.60      0.41      0.49      1132\n","           2       0.86      0.90      0.88      8384\n","\n","   micro avg       0.84      0.84      0.84     12959\n","   macro avg       0.76      0.71      0.73     12959\n","weighted avg       0.83      0.84      0.83     12959\n","\n"],"name":"stdout"}]},{"metadata":{"id":"-iI95rvX6mjp","colab_type":"text"},"cell_type":"markdown","source":["Я попробовала с epochs=5, 10 и 20, и результат ни разу не был лучше."]},{"metadata":{"id":"utTiNlGU82rV","colab_type":"text"},"cell_type":"markdown","source":["## Model 3"]},{"metadata":{"id":"GhOwnsalo9_z","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":319},"outputId":"8e6ba35a-5abe-4697-f113-94a7f181977b","executionInfo":{"status":"ok","timestamp":1556360157951,"user_tz":-180,"elapsed":660,"user":{"displayName":"Valerie Shelgunova","photoUrl":"https://lh5.googleusercontent.com/-i2CX_QSsamo/AAAAAAAAAAI/AAAAAAAAAB8/YRSVdMujpXw/s64/photo.jpg","userId":"14712883095412086889"}}},"cell_type":"code","source":["embedding_dim = 50\n","\n","model3 = Sequential()\n","model3.add(layers.Embedding(input_dim=vocab_size, \n","                           output_dim=embedding_dim, \n","                           input_length=maxlen))\n","model3.add(layers.GlobalAveragePooling1D())\n","model3.add(layers.Dense(10, activation='relu'))\n","model3.add(layers.Dense(10, activation='relu'))\n","model3.add(layers.Dense(3, activation=tf.nn.softmax))\n","model3.compile(loss=\"sparse_categorical_crossentropy\",optimizer='rmsprop',metrics=['sparse_categorical_accuracy'])\n","model3.summary()"],"execution_count":27,"outputs":[{"output_type":"stream","text":["_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding_4 (Embedding)      (None, 100, 50)           3080700   \n","_________________________________________________________________\n","global_average_pooling1d_1 ( (None, 50)                0         \n","_________________________________________________________________\n","dense_10 (Dense)             (None, 10)                510       \n","_________________________________________________________________\n","dense_11 (Dense)             (None, 10)                110       \n","_________________________________________________________________\n","dense_12 (Dense)             (None, 3)                 33        \n","=================================================================\n","Total params: 3,081,353\n","Trainable params: 3,081,353\n","Non-trainable params: 0\n","_________________________________________________________________\n"],"name":"stdout"}]},{"metadata":{"id":"DAY1-QOto9wa","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":269},"outputId":"54292ad3-a708-4404-bb11-15c0d9938940","executionInfo":{"status":"ok","timestamp":1556363933417,"user_tz":-180,"elapsed":4,"user":{"displayName":"Valerie Shelgunova","photoUrl":"https://lh5.googleusercontent.com/-i2CX_QSsamo/AAAAAAAAAAI/AAAAAAAAAB8/YRSVdMujpXw/s64/photo.jpg","userId":"14712883095412086889"}}},"cell_type":"code","source":["history = model3.fit(X_train, y_train, epochs=80, callbacks = [plot_losses]) #55 эпох - loss 0.17"],"execution_count":28,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"metadata":{"id":"jFW9idE89xS9","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":195},"outputId":"d1e6d214-f63b-48e0-a517-d3742c4a654d","executionInfo":{"status":"ok","timestamp":1556363933651,"user_tz":-180,"elapsed":3759494,"user":{"displayName":"Valerie Shelgunova","photoUrl":"https://lh5.googleusercontent.com/-i2CX_QSsamo/AAAAAAAAAAI/AAAAAAAAAB8/YRSVdMujpXw/s64/photo.jpg","userId":"14712883095412086889"}}},"cell_type":"code","source":["classif_report(model3)"],"execution_count":29,"outputs":[{"output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0       0.92      0.78      0.84      3443\n","           1       0.51      0.59      0.55      1132\n","           2       0.86      0.90      0.88      8384\n","\n","   micro avg       0.84      0.84      0.84     12959\n","   macro avg       0.76      0.76      0.76     12959\n","weighted avg       0.85      0.84      0.84     12959\n","\n"],"name":"stdout"}]},{"metadata":{"id":"wQtIEr6vCviL","colab_type":"text"},"cell_type":"markdown","source":[""]},{"metadata":{"id":"ZrXJDTYJCvVh","colab_type":"text"},"cell_type":"markdown","source":["## 4\n","буду настраивать модель со слоем Flatten. Попробую другое количество нейронов))"]},{"metadata":{"id":"QFS0RkMmCwiL","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":319},"outputId":"7c01fec1-f321-4b8e-8f50-bb45da24403b","executionInfo":{"status":"ok","timestamp":1556359127701,"user_tz":-180,"elapsed":617,"user":{"displayName":"Valerie Shelgunova","photoUrl":"https://lh5.googleusercontent.com/-i2CX_QSsamo/AAAAAAAAAAI/AAAAAAAAAB8/YRSVdMujpXw/s64/photo.jpg","userId":"14712883095412086889"}}},"cell_type":"code","source":["embedding_dim = 100\n","\n","model4 = Sequential()\n","model4.add(layers.Embedding(input_dim=vocab_size, \n","                           output_dim=embedding_dim, \n","                           input_length=maxlen))\n","model4.add(layers.Flatten())\n","model4.add(layers.Dense(50, activation='relu'))\n","model4.add(layers.Dense(50, activation='relu'))\n","model4.add(layers.Dense(3, activation=tf.nn.softmax))\n","model4.compile(loss=\"sparse_categorical_crossentropy\",optimizer='rmsprop',metrics=['sparse_categorical_accuracy'])\n","model4.summary()"],"execution_count":21,"outputs":[{"output_type":"stream","text":["_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding_2 (Embedding)      (None, 100, 100)          6161400   \n","_________________________________________________________________\n","flatten_2 (Flatten)          (None, 10000)             0         \n","_________________________________________________________________\n","dense_4 (Dense)              (None, 50)                500050    \n","_________________________________________________________________\n","dense_5 (Dense)              (None, 50)                2550      \n","_________________________________________________________________\n","dense_6 (Dense)              (None, 3)                 153       \n","=================================================================\n","Total params: 6,664,153\n","Trainable params: 6,664,153\n","Non-trainable params: 0\n","_________________________________________________________________\n"],"name":"stdout"}]},{"metadata":{"id":"0eDIubtUDbsF","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":269},"outputId":"ac5955c8-7dd0-4694-bdbd-d38e24c5e555","executionInfo":{"status":"ok","timestamp":1556359420339,"user_tz":-180,"elapsed":5,"user":{"displayName":"Valerie Shelgunova","photoUrl":"https://lh5.googleusercontent.com/-i2CX_QSsamo/AAAAAAAAAAI/AAAAAAAAAB8/YRSVdMujpXw/s64/photo.jpg","userId":"14712883095412086889"}}},"cell_type":"code","source":["history = model4.fit(X_train, y_train, epochs=3, callbacks = [plot_losses]) "],"execution_count":22,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"metadata":{"id":"6t0g5nd5MpT1","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":195},"outputId":"d3d1943d-4bcd-41b2-ddc6-0689501d836c","executionInfo":{"status":"ok","timestamp":1556359448822,"user_tz":-180,"elapsed":1279,"user":{"displayName":"Valerie Shelgunova","photoUrl":"https://lh5.googleusercontent.com/-i2CX_QSsamo/AAAAAAAAAAI/AAAAAAAAAB8/YRSVdMujpXw/s64/photo.jpg","userId":"14712883095412086889"}}},"cell_type":"code","source":["classif_report(model4)"],"execution_count":23,"outputs":[{"output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0       0.91      0.84      0.87      3443\n","           1       0.62      0.51      0.56      1132\n","           2       0.88      0.92      0.90      8384\n","\n","   micro avg       0.87      0.87      0.87     12959\n","   macro avg       0.80      0.76      0.78     12959\n","weighted avg       0.86      0.87      0.86     12959\n","\n"],"name":"stdout"}]},{"metadata":{"id":"PGjGXEUjQLIT","colab_type":"text"},"cell_type":"markdown","source":["10 эпох для этой модели - переобучение. Три эпохи - отличный результат. Но, в общем-то, такой же,  как у  модели 1 и у  модели 3, третья модель только долго обучается в сравнении с этими двумя.\n","\n","Не знаю, что можно здесь еще придумать, чтобы улучшить результат. "]}]}